# Generated by Django 4.2.5 on 2023-09-30 06:45

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    dependencies = [
        ('dcim', '0172_larger_power_draw_values'),
        ('tenancy', '0010_tenant_relax_uniqueness'),
        ('extras', '0092_delete_jobresult'),
        ('netbox_physical_clusters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhysicalCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('status', models.CharField(default='planned', max_length=50)),
                ('cluster_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='physical_clusters', to='netbox_physical_clusters.physicalclustertype')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='physical_clusters', to='dcim.site')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='physical_clusters', to='tenancy.tenant')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddConstraint(
            model_name='physicalcluster',
            constraint=models.UniqueConstraint(fields=('site', 'name'), name='netbox_physical_clusters_physicalcluster_unique_site_name'),
        ),
    ]
